#!/usr/bin/env php

<?php

use Doctrine\ORM\Tools\Console\ConsoleRunner;
use Doctrine\ORM\Tools\Console\EntityManagerProvider\SingleManagerProvider;
use Dotenv\Dotenv;
use Symfony\Component\Console\Application;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;
use App\Config\ORM;

require 'vendor/autoload.php';

// Load our environment variables from the .env file:
Dotenv::createImmutable(__DIR__)->load();

require_once 'app/Config/Constants.php';
require 'app/Config/ORM.php';

$ORM = new ORM();
$entityManager = $ORM->getProvider();

$app = new Application('RentRoad CLI', 'v0.0.1');

ConsoleRunner::addCommands($app, new SingleManagerProvider($entityManager));

$app
    ->register('db:seed')
    ->setDescription('Seed the database with initial data')
    ->setCode(function (InputInterface $input, OutputInterface $output) use ($entityManager) {
        $txt = '';
        exec('php cli orm:schema-tool:drop -f', $txt);
        exec('php cli db:update', $txt);

        $seeders = \App\Seeders\BaseSeeder::ORDER;

        foreach ($seeders as $seeder) {
            $seederInstance = new $seeder($entityManager);
            if (method_exists($seederInstance, 'run')) {
                $seederInstance->run();
            }
        }

        $output->writeln($txt);
        $output->writeln('Database seeded successfully!');
    });

$app
    ->register('db:update')
    ->setDescription('Update the schema')
    ->setCode(function (InputInterface $input, OutputInterface $output) {
        $txt = '';
        exec('php cli orm:schema-tool:update -f', $txt);
        exec('find /tmp -name "*.php*" -type f -delete', $txt);
        $output->writeln($txt);
    });

$app->run();